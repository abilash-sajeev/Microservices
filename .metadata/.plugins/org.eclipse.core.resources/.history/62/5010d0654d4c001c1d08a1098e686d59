package com.examples.store.service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.objenesis.instantiator.basic.NewInstanceInstantiator;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.examples.store.exceptions.ProductNotFoundException;
import com.examples.store.models.Product;
import com.examples.store.models.ProductData;

@RestController
public class StoreInfoService {
	
	@Autowired
	RestTemplate restTemplate;
	
	@RequestMapping("/GetProducts")
	public List<ProductData> getProducts(){
		Product[] productsArray = restTemplate.getForObject("http://localhost:3000/GetProductInfo", Product[].class);
		return Arrays.asList(productsArray).stream()
				.map(product -> new ProductData(product.getId(), product.getProductName(), product.getPrice(), "Unsold"))
				.collect(Collectors.toList());
	}
	
	@RequestMapping("/GetProducts/{id}")
	public ResponseEntity<ProductData> getProduct(@PathVariable String id) {
		
		try {
			Product product = restTemplate.getForObject("http://localhost:3000/GetProductInfo/"+id, Product.class);
			return new ResponseEntity<>(new ProductData(product.getId(), product.getProductName(), product.getPrice(), "Unsold"), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity(new ProductNotFoundException(), HttpStatus.NOT_FOUND);
		}
	}
	
//	public ProductData getProduct(@PathVariable String id) throws ProductNotFoundException{
//		Product product = restTemplate.getForObject("http://localhost:3000/GetProductInfo/"+id, Product.class);
//		return new ProductData(product.getId(), product.getProductName(), product.getPrice(), "Unsold");
//	}

}
